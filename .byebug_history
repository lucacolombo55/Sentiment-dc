c
task[:scores][0]
task[:scores]
task[:name]
task['name']
task
@tasks
c
@tasks
@dates.first.class
@dates
n
tasks
c
DailyReport.where(user_id: 1).sort_by(&:register_date).last(5).map{|x| x.register_date.strftime('%Y-%m-%d')}c
DailyReport.where(user_id: 1).sort_by(&:register_date).last(5).map{|x| x.register_date.strftime('%Y-%m-%d')}
DailyReport.where(user_id: 1).sort_by(&:register_date).last(5).count
DailyReport.where(user_id: 1).sort_by(&:register_date).last(5)
DailyReport.where(user_id: 1).sort_by(&:register_date).map(&:register_date)
DailyReport.where(user_id: 1).sort_by(&:register_date)
DailyReport.where(user_id: 1).count.sort_by(&:register_date)
DailyReport.where(user_id: 1).count
DailyReport.where(user_id: 1)
DailyReport.where(task_id: task.id, user_id: 1)
c
@dates.map{|x| x.strftime('%Y-%m-%d')}
@dates.map(&:strftime('%Y-%m-%d')
@dates.first.strftime('%Y-%m-%d')
@dates.first.strftime('%y-%m-%d')
@dates.first
@dates
c
Date.today-2
Date.today-1
Date.today
c
date
cdate
c
 @register_dates.includes? date
@register_dates.count
@register_dates
c
cc
c
cc
c
cc
c
date.day
date.month
date.class
date
c
register_date.strftime("%d/%m/%Y")
register_date.class
register_date
e.class.to_s == "ActiveRecord::RecordNotUniqu"
e.class.to_s == "ActiveRecord::RecordNotUnique"
e.class.to_s
c
e.class.to_s
e.class.class
e.class
e.instance_of?
e.instance_methods
e.class.exception.detail
e.class.exception.methods
e.class.exception['DETAIL']
e.class.exception
e.class.methods
e.class
e.methods
e.message.class
e.message
e.error
e
c
n
c
exception
n
c
exception
n
c
exception
n
return_to_address
n
c
n
c
n
c
n
c
dr
n
params
c
params
c
params
c
commit
task
params["nh-19"]
params.keys.select{|x| x.start_with?("t")}.first.split(/-/)[1].to_i
params.keys.select{|x| x.start_with?("t")}.first.split(/-/)[1].class
params.keys.select{|x| x.start_with?("t")}.first.split(/-/)[1]
params.keys.select{|x| x.start_with?("t")}.first.split(/-/)
params.keys.select{|x| x.start_with?("t")}.first
params.keys.select{|x| x.start_with?("t")}
params.keys
params
c
params
c
params
c
n
params.keys
params
byebug
c
C
c
e
n
@task.find_children
n
@task
c
@task.id
@task.count
@task
n
c
@task
n
c
params
c
@branch
c
task['custom_fields'][0]['type_config']['options'].select {|x| x['orderindex'] == task['custom_fields'][0]['value']}[0]['id']
@branch.bid
task['custom_fields'][0]['type_config']['options'].select{|x| x['orderindex'] == task['custom_fields'][0]['value']}[0]['id']
task['custom_fields'][0]['type_config']['options'].select{|x| x['orderindex'] == task['custom_fields'][0]['value']}[0]
task['custom_fields'][0]['type_config']['options'].select{|x| x['orderindex'] == task['custom_fields'][0]['value']}
task['custom_fields'][0]['value']
task['custom_fields'][0]['type_config']['options'][1]
task['custom_fields'][0]['type_config']['options'][0]
task['custom_fields'][0]['type_config']['options']
task['custom_fields'][0]
@branch
c
Commit.all.count
Commit.where(task_id: nil).count
Commit.where(task_id: nil)
n
params
c
params
c
Commit.first
params.keys.select{|x| x.start_with?("commit")}
params.keys.map{|x| x.start_with?("commit")}
params.keys.map(&:start_with?("commit"))
params.keys
params[0]
params
'commit-12-24'.split(/-/)[1]
'commit-12-24'.split(/-/)[0]
'commit-12-24'.split(/-/)
'commit-12'.split(/-/)
'commit-12'.split(-)
Commit.first
params['commit2']
params
c
@task.name
@task
c
commit['author']['id'].class
commit['author']['id']
@commit
n
c
time[0..3].to_i
time[0..3]
time.class
time
commit
c_created
c
Commit.all
c
task['custom_fields'][0]['type_config']['options'].select {|x| x['orderindex'] == task['custom_fields'][0]['value']}[0]['name']
task['custom_fields'][0]['type_config']['options'].select {|x| x['orderindex'] == task['custom_fields'][0]['value']}[0]
task['custom_fields'][0]['type_config']['options'].select {|x| x['orderindex'] == task['custom_fields'][0]['value']}
c
task['custom_fields'][0]['type_config']['options'].select {|x| x['orderindex'] == task['custom_fields'][0]['value']}
   58:             byebug
Branch.new(name: task['custom_fields'][0]['type_config']['options'].select {|x|
n
x['orderindex'] 
n
x['orderindex'] 
task['custom_fields'][0]['value']
n
0 == 1
task['custom_fields'][0]['value']
x['orderindex']
x
c
x['orderindex']
x
n
c
task['custom_fields'][0]['type_config']['options'].select {|x| x[:orderindex] == task['custom_fields'][0]['value']}
task['custom_fields'][0]
n
task['custom_fields']
c
task[custom_fields][0]c
task[custom_fields][0]
task['custom_fields'][0]
task['custom_fields'][0]['type_config']
task['custom_fields'][0]['type_config']['options']
n
c
!Branch.where(value: task['custom_fields'][0]['value']).nil?
Branch.where(value: task['custom_fields'][0]['value']).nil?
Branch.where(value: task['custom_fields'][0]['value']).present?
task['custom_fields'][0]['value']
task['custom_fields'][0]
n
c
n
self
task
task['custom_fields']
task['custom_fields'][0]
task['custom_fields'][0]['value']
n
Branch.where(value: task['custom_fields'][0]['value']).present?
n
c
task['custom_fields'][0]['value'].present?
task['custom_fields'][0]['value'].nil?
task['custom_fields'][0]['value'].empty?
task['custom_fields'][0]['value']
n
task['custom_fields'].count
